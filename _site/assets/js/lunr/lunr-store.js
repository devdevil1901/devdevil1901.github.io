var store = [{
        "title": "Useful Markdown grammer tip",
        "excerpt":"앞으로 유용한 tip들은 여기다 정리하도록 하자.   table에서 줄 바꿈하기  &lt;br\\/&gt; tag를 사용한다.   예    |f1 | f2 |    |— | — |    |첫 줄 &lt;br\\/&gt; 두 번째 줄 | |                  f1       f2                       첫 줄   두 번째 줄                   ","categories": ["jekyll","update"],
        "tags": [],
        "url": "http://localhost:4000/jekyll/update/useful-markdown-tip-jekyll/",
        "teaser": null
      },{
        "title": "Shadowing",
        "excerpt":"vocabulary                                                                  get over               넘어 가다 극복하다.       weakness and lethargy I have to get over them                 letharget       ˈleθərdʒi 레더지       무기력                         precisely       prɪˈsaɪsli 프리사이슬리       정확히, 정확하게, 신중하게       They look precisely the same to me                 relic       relɪk 렐릭       유물 relics는 여러 유물 즉 유적을 뜻한다.       we find their ancient relics of their attmpts to map the sky. 우리는 하늘의 지도를 그리려는 고대 유적을 발견한다                 tusk       tʌsk 터스크       (코끼리의) 엄니 즉 상아       this tusk is over 30,000 years old                 carving       ˈkɑːrvɪŋ 칼빙       carve가 조각하다 깍아서 만들다의 의미이므로,  조각해서 만든 것, 즉 조각품이나 새긴 무늬 등을 의미한다.       Some people think that it’s a carving of Orion 몇몇 사람들은 그것을 오리온을 조각한 것이라고 생각합니다.                 neolithic       ˌniːəˈlɪθɪk 니올레틱       신석기 시대의       the neolithic age 신석기 시대 it’s from a neolithic tomb in ancient China.                 the Big Dipper               dipper는 국자 즉 북극성을 의미한다.       that’s supposed to be the Big Dipper                 uncontroversial       ˌʌnkɑːntrəˈvɜːrʃl 언컨춰러버셜       논라의 여지 없는       The Nebra disk is uncontrolversial                 astronomer       əstrɑːnəmə 에스트로너머       천문학자       You don’t have to be an astronomer to know that you’re looking at the Moon phases.                 unrelenting       ʌnrɪˈlentɪŋ 언릴렌팅       끊임없는, 수그러들줄 모르는(=relentless) relent가 점차 수그러들다(혹은 그래서 점차 포기하고 동의하다)의 의미       it is unrelenting. it is time-varying. 그것은 끊임없고, 시간에 따라 변하는           ","categories": ["jekyll","update"],
        "tags": [],
        "url": "http://localhost:4000/jekyll/update/shadowing-jekyll/",
        "teaser": null
      },{
        "title": "Useful Markdown grammer tip",
        "excerpt":"대학교 1학년때, 학교에서 LUG(Linux User Group)을 만들어서 Linux를 공부하고,       전국러그에서 1대 서울러그 리더가 되서 언더그라운드 해커들과 서울러그를 결성해서 헛 소리하던 때가 엇그제 같은데.     어드덧 이렇게 나이를 먹게 되었다.       그 당시 내가 좋아하던 리눅스는 console로만 쓰는 linux 였다.      리눅스를 설치하면 init 3로 부팅되게 수정해서, x-windows 없이 부팅하도록 해놓는게 가장 먼저하는 일이었다.   하지만 RHCE도 데비안 계열의 ubuntu를 쓰게 만드는 날이 오고, x windows도 많이 발전해서, MAC 짭 정도는 될 수준에 이르렀다.    이쯤되면 console모드에서 리눅스를 쓰는 것은 너무나도 비효율적인 일일 것이다.     그래서 나도 x windows에서 작업을 하고 있다.      내 비디오 카드는 GeForce-GTX1650인데, nvidia에서 제공하는  아직도 graphic card가 windows 만큼 linux에서는 원활하게 동작하지 않는 것으로 보인다.    그래서 드라이버 재 설정을 위해서 x windows 없이 부팅해야 할 일들이 생긴다.    그때 유용한 command를 정리 해 둔다.   x windows 없이 부팅.  $ sudo systemctl set-default multi_user target $ sudo reboot 0   x windows로 다시 복구.  $ sudo systemctl set-default graphical target $ sudo reboot 0   ","categories": ["jekyll","update"],
        "tags": [],
        "url": "http://localhost:4000/jekyll/update/ubuntu-console-mode-jekyll/",
        "teaser": null
      },{
        "title": "Journal",
        "excerpt":"June 20the 2020  I have been too lazy for few month.  Definely I could have been better. But I think I would have chance.   Since Now, I will do it very well.   Last night, I watched something very interesting about conspiracy theory in youtube.   that is called illuminati, deepstate, freemason.   I can’t know what is true or not. but it is very very attractive like UFO.    today, I saw contents.  that is interview of the Donald Trump.  he said they are spying on him.   and they have done is so corrupt.   (그들이 해온 것들은 너무나 부페했다.)   Now apart from this, I need a plan.  ya, i have to and i will.     After i take my children to the daycare, I have to start to study immediately.     if I am so tired, I have to start to study English.   No game, No porn. game -&gt; English studying porn -&gt; exercise   June 21th 2020  Today, I was hurted by my family.    very very hard time to me.    i was treated like fool, that is most the hardest thing.    A lot of caring, dedication, these things. is ignored with that.   she always push me, always. she don’t fit me.   it becomes a havit.   It is very very hard time to me.     it force to me what i can’t decide.     my life is failed. 100%.     and i have to accept this.     I think My wife is greatly influenced by my family.     I mean those things that ignore me.     They always think and say on the premise that i’m wrong.    As I always know, My mother is always wrong.    And My mother is push me.     That’s where it came from.   Someday, I have to do divorce for my real life and happiness.   When i die, there is anybody next to me.   It’s okay. It’s okay.    because I was the master of my life.   I can say this for sure.    I am done with my wife.   and My mother and My elder syster. they doesn’t care me.  I am not matter to them.   July 15th 2020  now I am gonna talk about my father.   last night, I got my father’s phone call.  he said i wanna see my daughters.  when i heard that, i was angry. it’s cause my father only talks without behavior. for example when i bought dinner our family, my father left immediately after eat meal to meet his friends.  ","categories": ["jekyll","update"],
        "tags": [],
        "url": "http://localhost:4000/jekyll/update/journal-jekyll/",
        "teaser": null
      },{
        "title": "How to develop android studio plugin",
        "excerpt":"#           IntelliJ에서 Create New Project를 선택한다.  그리고 Gradle-IntelliJ Platform Plugin과 Kotlin/JVM을 선택.            plugin.xml에서 Name, Company Name등을 적절히 수정한다.            src/main/kotlin에 마우스 오른쪽으로 N       Plugin의 기능 추가  src/main/kotlin에서 마우스 오른쪽 클릭 후,    New-Plugin Devkit을 선택하면,  다음과 같은 동작에 대한 정의를 추가할 수 있다.   Action, Application Service, Module Service, Project Service, Theme가 존재 한다.   Application Service  IDE의 생명주기에 대한 것.  TestApplicationService를 추가한다면,  src/kotlin/impl/TestApplicationSericeImpl   src/kotlin/TestApplicationService   가 추가되고,   src/resources/META-INF/plugin.xml에 다음의 내용이 추가된다.  &lt;extensions defaultExtensionNs=\"com.wonderland\"&gt;         &lt;!-- Add your extensions here --&gt;         &lt;applicationService serviceInterface=\"TestApplicationService\"                             serviceImplementation=\"impl.TestApplicationServiceImpl\"/&gt;     &lt;/extensions&gt;   Reference  plugin제작   plugin  findbug   sample   ","categories": ["jekyll","update"],
        "tags": [],
        "url": "http://localhost:4000/jekyll/update/android-studio-plugin-jekyll/",
        "teaser": null
      },{
        "title": "Wonderland",
        "excerpt":"며칠간 고민해 보았는데 치킨 집 보다 더 안좋다.   결국에 이것으로 사업을 하는 것은 매우 아닌듯 하다. 그렇지만 wonderland는 틈틈히 개발 하도록 하자.   취업이 맞다.    그래 공부를 하자. 공부를.      Idea는 실제로 그것이 구현되어 가면서 비로서 완성될 수 있는 것이다. 마크 주커버그    Strategy          개발 효율성 향상을 위해서, APP을 root 권한으로 권한 상승 시키는 방법을 사용한다.    즉 kotlin 코드로 root 권한 동작이 가능하도록 한다.            kernel 자체를 수정 해서, diff로 코드를 관리 하는 식으로 가도록 한다. 근데 그러면 전체 커널 소스를 유지 보수 해야 한다.  즉 개발은 커널 소스로 하고, git에서는 patch 형태로 유지해야 할 듯 하다.            음… binder에서 king을 호출하고 king은 device driver가 아니라, character device를 열면 된다.  대세인 miscdevice를 이용하도록 하자.       king은 먼저 App인 Cheshire Cat은 root 권한으로 상승 시킨다.           injection 필요 없이. file_operations에서, .mmap을 이용하는 방법이 있을 수 있겠다.!! madcode 처럼.            kernel module이 변경되었다면 이의 반영을 위해 -no-snapshot 옵션을 줘서, 콜드 부트를 해야 한다.   qemu 이것 부터 확실히 공부해서 마스터 해 놓고 넘어가도록 하자.   각 image 그리고 그것의 unpack and pack 이런 것들을 마스터 하고 가도록 하자.       Design     1. 시퀀스  White Rabbit이 wonderserver king은 먼저 App인 Cheshire Cat은 root 권한으로 상승 시킨다.  2.   Mock이라던지 Module Test를 대체할 수 있는 개념.  Build Variant에 wonderland를 추가해서, 이거용으로 빌드 한다.   구상-&gt; Specification by example로 변형시켜야 한다.          개인 라이센스로 구매할 수 있도록 하는 시스템.  즉 IDA와 같은 식으로 몇 십만원 내면 구매.  개발툴은 팔린다. 때문에 이것은 가능성이 있다. 그리고 파편화도 대응케 해주는 식으로.            hooking 구조로 가야 한다.  그래야 호환성을 높일 수가 있다. 또 live update도 가능하다.            avd image manager 구조가 있어서, image 생성 부터 편하게 해주고 여기서 유명한 phone의 사양으로 세팅할 수 있도록 해주어야 한다.  또 가능하면 (이건 좀 어렵다) phone의 architecture를 반영해 주면 좋다.            packet을 class나 package를 지정하면 지정한 녀석의 packet을 모니터링 해 주고, json등의 내용도 추출해 준다.            가장 중요한 것은 이 VM에서 실행 할 때는 Wonderland라는 system services를 추가해서, 특정 API로 detail 하게 제어할 수 있도록 하는 것이다.            특정 object가 살아남는       버전 별 호환성을 높이기 위해서는  각 유명한 폰의 사양을 정확히 파악해야 한다. 즉 기기에 대한 이해도가 높아야 한다.  그래서 vm에 구현해야 한다.   To do      Google play 버전에서, kernel만 바꿔서 하는 것을 확인 해 봐야 한다.   만약에 이게 된다면, 커널에서 CheshireCat, wonderserver등등을 전부 root 권한으로 바꾸어 주자.  GooglePlay와 GoogleApi 버전 모두 확인해 보아야 한다.   ok 확실히 감은 잡았다.   된다!! ok 감잡았다. 모든 파일들은 일반 권한으로 설치 하고, 커널단에서 root 권한을 부여 하도록 하자.  아니다. -kernel option은 먹히지 않는다.  Google API 까지만 된다. okay!!!  일단 이걸로 가자.      cuttlefish를 살펴 봐야 한다. android emulator와는 다르게 서버단에서 혹은 이를 이용해서 로컬에서도 동작하도록 하는 것 같다.    뭔가 framework의 높은 충성도를 이야기 하는데 avd의 aosp가 일반 폰과 동일 소스로 컴파일 하기 때문에 HAL쪽 즉 Hardware쪽을 이야기 하는 듯도 싶다.  https://www.linuxplumbersconf.org/event/2/contributions/269/attachments/56/63/Kernel_Hacking_with_Cuttlefish.pdf   https://source.android.google.cn/setup/create/cuttlefish?hl=ko   Reference  Xiomi black shark2 rooting 방법   diff로 patch 만들기  ","categories": ["jekyll","update"],
        "tags": [],
        "url": "http://localhost:4000/jekyll/update/wonderland-jekyll/",
        "teaser": null
      }]
